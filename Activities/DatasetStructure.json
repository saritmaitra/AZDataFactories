# This is optional. It defines the schema of the dataset by containing a collection of names and data types of columns. We use the structure
# section to provide type information that is used to convert types and map columns from the source to the destination

"structure":
[
  { "name": "userid", "type": "Int64"},
  { "name": "name", "type": "String"},{ "name": "lastlogindate", "type": "Datetime", "culture":
                                       "fr-fr", "format": "ddd-MM-YYYY"}
]


# name:  Name of the column. 
# Required: Yes

# type: Data type of the column. Azure Data Factory supports the following interim data types as allowed values: Int16, Int32, Int64, Single, Double, Decimal, Byte[], Boolean,
# String, Guid, Datetime, Datetimeoffset, and Timespan.
# Required: No

# culture: .NET-based culture to be used when the type is a .NET type: Datetime or Datetimeoffset. The default is en-us.
# Required: No

# format: Format string to be used when the type is a .NET type: Datetime or Datetimeoffset.
# Required: No

# When to Specify a Dataset Structure?
# When we are copying data within strong schema-based relational stores and want to map source columns to sink columns and their names are not
# the same, we can specify a dataset structure. 
# We may also specify a dataset structure when our source contains no schema or a weak schema like text files in Blob Storage, which needs to be
# converted to native types in sink during the Copy activity.
